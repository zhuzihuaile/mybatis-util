<?xml version="1.0" encoding="UTF-8" ?>   
    <!DOCTYPE mapper   
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="base">

	<sql id="insertField">
		<if test="insert_field != null">
			<foreach collection="insert_field" index="key" item="item" separator=",">
				${key}
			</foreach>
		</if>
	</sql>
	<sql id="insertFieldValue">
		<if test="insert_field != null">
			<foreach collection="insert_field" index="key" item="item" separator=",">
				#{item}
			</foreach>
		</if>
	</sql>

	<sql id="orderAndLimit">
		<if test="orderBy != null">
			order by ${orderBy.orderByField} ${orderBy.orderByType}
		</if>
		<if test="limit != null">
			limit
			<if test="offest != null">
				#{start},
			</if>
			<if test="offest == null">
				0,
			</if>
			#{limit}
		</if>
	</sql>

	<sql id="selectField">
		<if test="includeSelectField == null">
			<if test="select_field == null">
				*
			</if>
			<if test="select_field != null">
				${select_field}
			</if>
		</if>
		<!-- <if test="include_select_field != null"> <include refid="${include_select_field}" 
			/> </if> -->
	</sql>

	<sql id="whereField">
		where 1 = 1
		<include refid="base.whereEqualField"></include>
		<include refid="base.whereNotEqualField"></include>
		<include refid="base.whereRightLikeField"></include>
		<include refid="base.whereInField"></include>
		
		<include refid="base.whereGtField"></include>
		<include refid="base.whereGteField"></include>
		<include refid="base.whereLtField"></include>
		<include refid="base.whereLteField"></include>
	</sql>

	<sql id="whereEqualField">
		<if test="where_equal_field != null">
			<foreach collection="where_equal_field" index="key" item="item">
				and ${key} = #{item}
			</foreach>
		</if>
	</sql>
	
	<sql id="whereNotEqualField">
		<if test="where_not_equal_field != null">
			<foreach collection="where_not_equal_field" index="key" item="item">
				and ${key} != #{item}
			</foreach>
		</if>
	</sql>
	
	<sql id="whereRightLikeField">
		<if test="where_right_like_field != null">
			<foreach collection="where_right_like_field" index="key" item="item">
				and ${key} like CONCAT('', #{item}, '%')
			</foreach>
		</if>
	</sql>
	
	<sql id="whereInField">
		<if test="where_in_field != null">
			<foreach collection="where_in_field" index="key" item="item">
				and ${key} in 
				<foreach collection="item" index="key" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>
			</foreach>
		</if>
	</sql>
	
	<!-- <sql id="whereBetweenField">
		<if test="where_between_field != null">
			<foreach collection="where_between_field" index="key" item="item">
				and ${key} BETWEEN ${item['gte']} AND ${item['lt']}
			</foreach>
		</if>
	</sql> -->
	
	
	<sql id="whereGtField">
		<if test="where_gt_field != null">
			<foreach collection="where_gt_field" index="key" item="item">
				and ${key} > #{item}
			</foreach>
		</if>
	</sql>
	
	<sql id="whereGteField">
		<if test="where_gte_field != null">
			<foreach collection="where_gte_field" index="key" item="item">
				and ${key} >= #{item}
			</foreach>
		</if>
	</sql>
	
	<sql id="whereLtField">
		<if test="where_lt_field != null">
			<foreach collection="where_lt_field" index="key" item="item">
				and ${key} &lt; #{item}
			</foreach>
		</if>
	</sql>
	
	<sql id="whereLteField">
		<if test="where_lte_field != null">
			<foreach collection="where_lte_field" index="key" item="item">
				and ${key} &lt;= #{item}
			</foreach>
		</if>
	</sql>
	
	<sql id="setField">
		<if test="update_set_field != null">
			set 
			<foreach collection="update_set_field" index="key" item="item" separator=",">
				${key} = #{item}
			</foreach>
		</if>
	</sql>
</mapper>   